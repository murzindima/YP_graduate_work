name: sprint7_auth_2
version: '3.9'

services:
  postgres-auth:
    container_name: $AUTH_POSTGRES_HOST
    image: postgres:16.0-alpine3.18
    env_file:
      - .env
    environment:
      - PGPORT=$AUTH_POSTGRES_PORT
      - POSTGRES_HOST=$AUTH_POSTGRES_HOST
      - POSTGRES_PORT=$AUTH_POSTGRES_PORT
      - POSTGRES_DB=$AUTH_POSTGRES_DB
      - POSTGRES_USER=$AUTH_POSTGRES_USER
      - POSTGRES_PASSWORD=$AUTH_POSTGRES_PASSWORD
    expose:
      - $AUTH_POSTGRES_PORT
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p $AUTH_POSTGRES_PORT -U $AUTH_POSTGRES_USER -d $AUTH_POSTGRES_DB"]
      interval: "10s"
      timeout: "3s"
      retries: 3
      start_period: "10s"
    restart: always

  redis-auth:
    container_name: $AUTH_REDIS_HOST
    image: redis:7.2.3-alpine3.19
    expose:
      -  $AUTH_REDIS_PORT
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "-p $AUTH_REDIS_PORT", "ping"]
      interval: "10s"
      timeout: "1s"
      retries: 3
    volumes:
      - redis_auth_data:/data
    restart: always
    command: redis-server --port $AUTH_REDIS_PORT --save 60 1 --loglevel notice

  fastapi-auth:
    environment:
      - POSTGRES_HOST=$AUTH_POSTGRES_HOST
      - POSTGRES_PORT=$AUTH_POSTGRES_PORT
      - POSTGRES_DB=$AUTH_POSTGRES_DB
      - POSTGRES_USER=$AUTH_POSTGRES_USER
      - POSTGRES_PASSWORD=$AUTH_POSTGRES_PASSWORD
    container_name: $AUTH_FASTAPI_HOST
    build:
      context: ./auth_service/fastapi_auth
    image: $AUTH_FASTAPI_HOST
    env_file:
      - .env
    expose:
      - $AUTH_FASTAPI_PORT
    volumes:
      - fastapi_auth_log:/auth-service/logs
    healthcheck:
      test: curl -s -f http://localhost:$AUTH_FASTAPI_PORT/auth/openapi || exit 1
      interval: "10s"
      timeout: "1s"
      retries: 3
    restart: always

  nginx-auth:
    container_name: nginx-auth
    image: nginx:1.25-bookworm
    ports:
      - 90:80
    volumes:
      - nginx_auth_log:/var/log/nginx
      - ./auth_service/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./auth_service/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      fastapi-auth:
        condition: service_healthy
    restart: always

  jaeger-auth:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-auth
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    depends_on:
      - fastapi-auth

networks:
  my_network:
    driver: bridge

volumes:
  postgres_auth_data:
  redis_auth_data:
  fastapi_auth_log:
  nginx_auth_log:
